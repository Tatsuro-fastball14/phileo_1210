<%= csrf_meta_tags %>

<h1>カード登録</h1>

<form id="card-form"
      novalidate
      data-turbo="false"
      data-publishable-key="<%= @stripe_pk %>"
      data-client-secret ="<%= @client_secret %>">
  <div id="card-element" style="padding:12px;border:1px solid #ddd;border-radius:6px;"></div>
  <div id="card-errors" role="alert" style="color:#c00;margin-top:8px;"></div>
  <button id="submit-btn" type="submit" style="margin-top:12px;">保存して購読開始</button>
</form>

<script src="https://js.stripe.com/v3/"></script>
<script>
(() => {
  const form = document.getElementById("card-form");
  const pk = form?.dataset.publishableKey;
  const clientSecret = form?.dataset.clientSecret;

  if (!pk) {
    alert("公開鍵が設定されていません（STRIPE_PUBLISHABLE_KEY）。");
    return;
  }
  if (!clientSecret) {
    alert("クライアントシークレットが生成できていません。ページを更新してください。");
    return;
  }

  const stripe   = Stripe(pk);
  const elements = stripe.elements();
  const card     = elements.create("card");
  card.mount("#card-element");

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    // 1) SetupIntent を確定し、PaymentMethod を取得
    const { error, setupIntent } = await stripe.confirmCardSetup(clientSecret, {
      payment_method: { card }
    });

    if (error) {
      document.getElementById("card-errors").textContent = error.message;
      return;
    }

    // 2) PM をサーバへ送信してサブスク作成
    const res = await fetch("/cards", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content
      },
      body: JSON.stringify({ payment_method_id: setupIntent.payment_method })
    });

    const json = await res.json();

    if (!res.ok) {
      document.getElementById("card-errors").textContent = json.error || "エラーが発生しました。";
      return;
    }

    // 3) 追加の 3DS 認証が必要なら実行
    if (json.requires_action && json.client_secret) {
      const { error: error2 } = await stripe.confirmCardPayment(json.client_secret);
      if (error2) {
        document.getElementById("card-errors").textContent = error2.message;
        return;
      }
    }

    // 4) 完了時リダイレクト
    window.location.href = json.redirect_to || "<%= cooks_search_path %>";
  });
})();
</script>
