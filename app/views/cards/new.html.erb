<%= csrf_meta_tags %>

<section class="plan" style="max-width:520px;margin:24px auto 40px;text-align:center;">
  <h2 style="margin:0 0 8px;">有料プラン</h2>
  <p style="font-size:1.6rem;font-weight:700;color:#111;margin:0;">
    月額 880円（税込）
  </p>
  <p style="margin:8px 0 16px;color:#444;">
    毎月自動更新／<strong>いつでも解約可能</strong>です。
  </p>

  <form id="card-form"
        novalidate
        data-turbo="false"
        data-publishable-key="<%= @stripe_pk %>"
        data-client-secret ="<%= @client_secret %>"
        style="text-align:left;margin:0 auto;max-width:520px;">
    <label for="card-element" style="display:block;margin:0 0 6px;color:#333;">クレジットカード</label>
    <div id="card-element"
         style="padding:12px;border:1px solid #ddd;border-radius:8px;"></div>

    <div id="card-errors" role="alert" aria-live="polite"
         style="color:#c00;margin-top:8px;min-height:1.2em;"></div>

    <button id="submit-btn" type="submit"
            style="margin-top:12px;padding:10px 18px;font-size:1rem;border:0;border-radius:8px;background:#111;color:#fff;cursor:pointer;">
      保存して購読開始
    </button>
  </form>

  <p style="font-size:0.92rem;color:#555;margin-top:16px;line-height:1.6;">
    ※料金は税込表示です。更新日は初回登録日の翌月同日です。<br>
    ※解約はマイページの<strong>「購読を解約する」</strong>ボタンから、いつでも行えます。
  </p>

  <a href="/cards"
     style="display:inline-block;margin-top:6px;color:#0a66c2;text-decoration:underline;">
    ▶ 購読を解約する（マイページへ）
  </a>
</section>

<script src="https://js.stripe.com/v3/"></script>
<script>
(() => {
  const form = document.getElementById("card-form");
  if (!form) return;

  const pk = form.dataset.publishableKey;
  const clientSecret = form.dataset.clientSecret;

  if (!pk) {
    document.getElementById("card-errors").textContent =
      "公開鍵が設定されていません（STRIPE_PUBLISHABLE_KEY）。";
    return;
  }
  if (!clientSecret) {
    document.getElementById("card-errors").textContent =
      "クライアントシークレットが生成できていません。ページを再読み込みしてください。";
    return;
  }

  const stripe   = Stripe(pk);
  const elements = stripe.elements();
  const card     = elements.create("card");
  card.mount("#card-element");

  let inFlight = false;

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    if (inFlight) return;
    inFlight = true;

    document.getElementById("card-errors").textContent = "";

    // 1) SetupIntent を確定し PaymentMethod を取得
    const { error, setupIntent } = await stripe.confirmCardSetup(clientSecret, {
      payment_method: { card }
    });

    if (error) {
      document.getElementById("card-errors").textContent = error.message || "カード認証に失敗しました。";
      inFlight = false;
      return;
    }

    // 2) PM をサーバへ送信しサブスク作成
    const res = await fetch("/cards", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "X-CSRF-Token": document.querySelector('meta[name="csrf-token"]').content
      },
      body: JSON.stringify({ payment_method_id: setupIntent.payment_method })
    });

    const json = await res.json();

    if (!res.ok) {
      document.getElementById("card-errors").textContent =
        (json && json.error) ? json.error : "エラーが発生しました。時間をおいて再度お試しください。";
      inFlight = false;
      return;
    }

    // 3) 追加の 3DS 認証が必要なら実行
    if (json.requires_action && json.client_secret) {
      const { error: error2 } = await stripe.confirmCardPayment(json.client_secret);
      if (error2) {
        document.getElementById("card-errors").textContent = error2.message || "追加認証に失敗しました。";
        inFlight = false;
        return;
      }
    }

    // 4) 完了
    window.location.href = json.redirect_to || "<%= cooks_search_path %>";
  });
})();
</script>
